<!DOCTYPE html>
<% if (person.hasOwnProperty('candidateName')) {
    title = person.candidateName.native;
    if (person.candidateName.hasOwnProperty('transliterated')) {
      title += ' / ' + person.candidateName.transliterated;
    }
  }
%>
<html>
  <head>
    <meta charset="utf-8">
    <title><%= title %></title>
    <link
      rel="stylesheet"
      type="text/css"
      href="/css/style.css"
    >
    <% if (useFooterStyle) { %>
      <link
        rel="stylesheet"
        type="text/css"
        href="/css/footer.css"
      >
    <% } %>
    <link
      href='https://fonts.googleapis.com/css?family=Open+Sans:300'
      rel='stylesheet'
      type='text/css'
    >
    <link
      rel="stylesheet"
      href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
      integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
      crossorigin=""
    />
    <script
      src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
      integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
      crossorigin=""
    ></script>
    <script>
      window.onload = function() {
        var citiesJson = "<%= JSON.stringify(person.cities) %>"
          .replace(/&#34;/g, '"');
        var cities = JSON.parse(citiesJson);
        var map = L
          .map('map')
          .setView([<%= person.coordinates %>], 13);
        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
          attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
          maxZoom: 18,
          id: 'mapbox/streets-v11',
          tileSize: 512,
          zoomOffset: -1,
          accessToken: '<%= mapboxToken %>'
        }).addTo(map);
        var marker = L.marker([<%= person.coordinates %>])
          .addTo(map)
          .bindPopup('<%=person.latitude%> <%=person.longitude%>')
          .openPopup();
        var markers = [marker];
        for (var i=0; i<cities.length; i++) {
          var city = cities[i];
          var circle = L.circle([city.latitude, city.longitude], {
            color: '#b780a0',
            fillColor: '#95557a',
            fillOpacity: 0.5,
            radius: 100 * Number(city.distance.replace('km', '')),
          }).addTo(map);
          var clat = Math.abs(city.latitude).toString() + (
            city.latitude < 0 ? 'S' : 'N'
          );
          var clon = Math.abs(city.longitude).toString() + (
            city.longitude < 0 ? 'W' : 'E'
          );
          circle.bindPopup(`${city.name}<br>${clat} ${clon}`);
          markers.push(circle);
        }
        var group = L.featureGroup(markers);
        map.fitBounds(group.getBounds());
      }
    </script>
  </head>
  <body>
    <div class="container">
      <% const spronoun = person.pronoun[0] %>
      <h1><%= title %></h1>
      <h2>Approximate Location <%= person.globe %></h2>
      With coordinates at <%= person.latitude %> <%= person.longitude %>,
      <% if (person.hasOwnProperty('candidateName')) { %>
        <%= title %>
      <% } else { %>
        this person
      <% } %>
      (<%= person.pronoun.join('/') %>)
      is likely from <%= person.flag %> <%= person.country %>
      <% if (person.hasOwnProperty('countryNative') &&
          person.countryNative !== 'none') {
      %>
        (<%= person.countryNative %>)
      <% } %>,
      country code <%= person.countryCode %>.
      <div id="map"></div>
      <h3>Nearest Cities</h3>
      From <%= person.latitude %> <%= person.longitude %>, the closest
      five cities found in the database are...
      <br>
      <table>
        <tr>
          <th>Name</th>
          <th>Lat</th>
          <th>Long</th>
          <th>Country</th>
          <th>District</th>
          <th>Distance</th>
        </tr>
        <% for(var i = 0; i < person.cities.length; i++) { %>
          <tr>
            <td><%= person.cities[i].name %></td>
            <td class="cell-num"><%= person.cities[i].latitude %>Â°</td>
            <td class="cell-num"><%= person.cities[i].longitude %>Â°</td>
            <td>
              <%= person.cities[i].country %>
              <%= Array.from(person.cities[i].country.toLowerCase())
                    .map(l => String.fromCodePoint(
                        l.charCodeAt() + 127365
                      )
                    ).join('')
              %>
            </td>
            <td><%= person.cities[i].adminCode %></td>
            <td><%= person.cities[i].distance %></td>
          </tr>
        <% } %>
      </table>
      <h3>General Information</h3>
      <figure style="float: right; width: 25%;">
        <img src="./images/headshot.svg" style="width: 100%;">
        <figcaption style="font-size: medium;">
          Possible rough appearance for
          <%= title %>.
        </figcaption>
      </figure>
      <%= spronoun.charAt(0).toUpperCase() + spronoun.slice(1) %>
      is probably
      <% if (person.gender.hasOwnProperty('sexuality') ||
          person.gender.hasOwnProperty('presentation')) { %>
          <%= person.gender.flag %>
      <% } %>
      <% if (person.gender.hasOwnProperty('presentation')) { %>
        a <%= person.gender.presentation.name %>
        <%= person.gender.presentation.symbol %>
        (<%= person.gender.presentation.value %>%)
      <% } %>
      <%= person.gender.name %>
      (<%= person.gender.symbol %>),
      <% if (person.gender.hasOwnProperty('sexuality')) { %>
        <%= person.gender.sexuality %>,
      <% } %>
      age <%= person.age %>.
      Like
      <% if (person.denomination !== null) { %>
        approximately <%= person.denomination.population %>%
        of the country,
        <%= person.pronoun[0] %>
        <%= spronoun === 'they' ? 'are' : 'is' %>
        or practice<%= spronoun === 'they' ? '' : 's' %>
        some form of
        <%= person.denomination.name %>
        <% if (person.denomination.emoji !== null) { %>
          (<%= person.denomination.emoji %>)
        <% } %>
        and like
      <% } %>
      <%= person.ethnicity.population %>% of the country, identifies
      as <%= person.ethnicity.name %>.  In the region, the average
      skin color tends to be roughly similar to
      <span
        class="swatch"
        style="background-color: <%= person.skinColor.color %>;"
      >
        <code><%= person.skinColor.color %></code>
      </span>
      or
      <span
        class="swatch"
        style="background-color: <%= person.skinColorFixed %>;"
      >
        <code><%= person.skinColorFixed %></code>
      </span>
      <%= person.skinColor.emoji %>.
      <br>
      <% var impairmentLength = person.physicalImpairments.length; %>
      <% if (impairmentLength > 0) { %>
        <%= spronoun.charAt(0).toUpperCase() + spronoun.slice(1) %>
        <%= spronoun === 'they' ? 'are' : 'is' %>
        living with â™¿
        <% var last = person.physicalImpairments.pop(); %>
        <% if (person.physicalImpairments.length > 0) { %>
          <%= person.physicalImpairments.map(
              i => `${i.name} (${i.population}%)`
            ).join(', ')
          %>
          and <%= last.name %> (<%= last.population %>%)
        <% } else { %>
          <%= last.name %> (<%= last.population %>%)
        <% } %>
        impairments
      <% } %>
      <% if (person.psychologicalImpairments.length > 0) { %>
        <% if (impairmentLength > 0) { %>
          and
        <% } else { %>
          <%= spronoun.charAt(0).toUpperCase() + spronoun.slice(1) %>
          <%= spronoun === 'they' ? 'are' : 'is' %>
        <% } %>
        coping with ðŸ§ 
        <% var last = person.psychologicalImpairments.pop(); %>
        <% if (person.psychologicalImpairments.length > 0) { %>
          <%= person.psychologicalImpairments.map(
              i => `${i.name} (${i.population}%)`
            ).join(', ') %>
          and <%= last.name %> (<%= last.population %>).
        <% } else { %>
          <%= last.name %> (<%= last.population %>%).
        <% } %>
      <% } %>
      <br>
      <% var languages = person.languages.length; %>
      <% if (languages > 0) { %>
        <%= spronoun.charAt(0).toUpperCase() + spronoun.slice(1) %>
        speak<%= spronoun === 'they' ? '' : 's' %>
        <% var last = person.languages.pop(); %>
        <% if (person.languages.length > 0) { %>
          <%= person.languages.map(
              i => `${i.name} (${i.population}%)`
            ).join(', ')
          %>
          and <%= last.name %> (<%= last.population %>%)
        <% } else { %>
          <%= last.name %> (<%= last.population %>%)
        <% } %>
      <% } %>
      <% if (languages > 0
          && person.hasOwnProperty('literacy')) { %>
        and
        <%= spronoun === 'they' ? 'are' : 'is' %>
        also
      <% } else { %>
        <% if (person.hasOwnProperty('literacy')) { %>
          <%= spronoun.charAt(0).toUpperCase() + spronoun.slice(1) %>
          <%= spronoun === 'they' ? 'are' : 'is' %>
        <% } %>
      <% } %>
      <% if (person.hasOwnProperty('literacy')) { %>
        literate (<%= person.literacy %>).
      <% } %>
      <h3>Possible Personality</h3>
      <p>
        The following traits are arbitrarily ordered as to which is the
        &ldquo;high&rdquo; and &ldquo;low&rdquo; ends of the spectrum.
        Negative numbers only mean that the scale is closer to the item
        on the left-hand side of the table.
      </p>
      <table>
      <% person.personalityTraits.forEach((t) => { %>
        <tr>
          <th>
            <%= t.low %>
          </th>
          <td style="width: 200px; text-align: center; background: linear-gradient(to right, #b1a296 <%= t.strength / 2 - 5 %>%, transparent <%= t.strength / 2 + 5 %>%);">
            <%= t.strength - 100 %>
          </td>
          <th>
            <%= t.high %>
          </th>
        </tr>
      <% }); %>
      </table>
      <p>
        The following is loosely based on astrological signs to provide a
        rough sketch, help narrow down age (if desired), and provide
        provide a birthday.  In this case, &ldquo;<%= title %>&rdquo;
        was born on
        <%= personality.date.toLocaleString('default', { month: 'long' }) %>
        <%= personality.date.getDate() %>
        (<%= personality.sign.name %> <%= personality.sign.symbol %>
        <% if (personality.sign.hasOwnProperty('cuspOf')) { %>
          on the cusp of
          <%= personality.sign.cuspOf.name %>
          <%= personality.sign.cuspOf.symbol %>
        <% } %>),
        in the year of the
        <%= personality.year.name %> <%= personality.year.symbol %>
        (<%= personality.birthYears.join(', ') %>).
      </p>
      <p>
      Friends tend to describe <%= person.pronoun[1] %> with words like:
      <% var keywordList = Object.keys(personality.keywords).sort() %>
      <% for (var ik = 0; ik < keywordList.length; ik++) { %>
        <% var keytext = keywordList[ik] %>
        <% if (ik === 0) { %>
          <% keytext = keytext[0].toUpperCase() + keytext.slice(1) %>
        <% } %>
        <% if (personality.keywords[keywordList[ik]] > 1) { %>
          <% keytext = `very <b><i>${keytext}</i></b>` %>
        <% } %>
        <% if (ik < keywordList.length - 1) { %>
          <% keytext = `${keytext}, ` %>
        <% } else { %>
          <% keytext = `and ${keytext}.` %>
        <% } %>
        <%- keytext %>
      <% } %>
      </p>
      <p>
      Additionally, we're told that:
      <%= personality.year.element.description %>
      </p>
      <h3>More Information</h3>
      <p>
        <small>Please see
        <a href="https://github.com/jcolag/background-generator">
          the project README
        </a>
        for an attempt to explain all the details that look strange.
        There are a <i>lot</i> of caveats, here, even ignoring the
        terrible templated grammar.
      </p>
      <hr>
      If you want to save the data for this person, the following is the
      JSON object used to fill in the above.
      <textarea>
<%- JSON.stringify(person, ' ', 2) %>
      </textarea>
    </div>

    <% if (useFooter) { %>
      <br>
      <div class="container">
        <hr>
        <%- include('_footer.ejs') %>
      </div>
    <% } %>
  </body>
</html>
